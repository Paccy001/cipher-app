{"ast":null,"code":"var _jsxFileName = \"/home/pacifique/Desktop/frequency-based/src/Cipher.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cipher = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [encrypted, setEncrypted] = useState('');\n  const [decrypted, setDecrypted] = useState('');\n  const [key, setKey] = useState('');\n  const [letterFrequencies, setLetterFrequencies] = useState({});\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleAnalyze = () => {\n    const textArray = text.split('');\n    const frequency = {};\n    for (const letter of textArray) {\n      if (letter.match(/[a-zA-Z]/)) {\n        const lowerCaseLetter = letter.toLowerCase();\n        frequency[lowerCaseLetter] = (frequency[lowerCaseLetter] || 0) + 1;\n      }\n    }\n    const sortedFrequency = Object.keys(frequency).sort((a, b) => frequency[b] - frequency[a]);\n    const keyLetter = sortedFrequency[0];\n    setLetterFrequencies(frequency);\n    setKey(keyLetter);\n  };\n  const handleEncrypt = () => {\n    const textArray = text.split('');\n    const mostFrequentChar = key; // Use the most frequent character as the key\n    const encryptedText = textArray.map(char => {\n      if (char.toLowerCase() === mostFrequentChar) {\n        return 'e'; // Replace the most frequent character with 'e'\n      } else if (char.match(/[a-zA-Z]/)) {\n        return 't'; // Replace all other letters with 't'\n      }\n      return char; // Keep non-alphabetic characters unchanged\n    }).join('');\n    setEncrypted(encryptedText);\n  };\n  const handleDecrypt = () => {\n    // Decryption logic can be implemented if needed\n    // For now, we will just set decrypted text to an empty string\n    setDecrypted('Decryption not implemented');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 pt-6 mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Double Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"p-2 border border-gray-400 rounded\",\n        value: text,\n        onChange: handleTextChange,\n        rows: 10,\n        cols: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-4\",\n        onClick: handleAnalyze,\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-4\",\n        onClick: handleEncrypt,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        onClick: handleDecrypt,\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Encrypted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"p-2 border border-gray-400 rounded\",\n        value: encrypted,\n        rows: 10,\n        cols: 50,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Decrypted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"p-2 border border-gray-400 rounded\",\n        value: decrypted,\n        rows: 10,\n        cols: 50,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-2 border border-gray-400 rounded\",\n        type: \"text\",\n        value: key,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Letter Frequencies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(letterFrequencies).map((letter, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [letter, \": \", letterFrequencies[letter]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Cipher, \"Ub5trxL4qIn8N+kw03ekMCh1Q6c=\");\n_c = Cipher;\nexport default Cipher;\nvar _c;\n$RefreshReg$(_c, \"Cipher\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Cipher","_s","text","setText","encrypted","setEncrypted","decrypted","setDecrypted","key","setKey","letterFrequencies","setLetterFrequencies","handleTextChange","e","target","value","handleAnalyze","textArray","split","frequency","letter","match","lowerCaseLetter","toLowerCase","sortedFrequency","Object","keys","sort","a","b","keyLetter","handleEncrypt","mostFrequentChar","encryptedText","map","char","join","handleDecrypt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","rows","cols","onClick","readOnly","type","index","_c","$RefreshReg$"],"sources":["/home/pacifique/Desktop/frequency-based/src/Cipher.js"],"sourcesContent":["import { useState } from 'react';\n\nconst Cipher = () => {\n  const [text, setText] = useState('');\n  const [encrypted, setEncrypted] = useState('');\n  const [decrypted, setDecrypted] = useState('');\n  const [key, setKey] = useState('');\n  const [letterFrequencies, setLetterFrequencies] = useState({});\n\n  const handleTextChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleAnalyze = () => {\n    const textArray = text.split('');\n    const frequency = {};\n\n    for (const letter of textArray) {\n      if (letter.match(/[a-zA-Z]/)) {\n        const lowerCaseLetter = letter.toLowerCase();\n        frequency[lowerCaseLetter] = (frequency[lowerCaseLetter] || 0) + 1;\n      }\n    }\n\n    const sortedFrequency = Object.keys(frequency).sort((a, b) => frequency[b] - frequency[a]);\n    const keyLetter = sortedFrequency[0];\n\n    setLetterFrequencies(frequency);\n    setKey(keyLetter);\n  };\n\n  const handleEncrypt = () => {\n    const textArray = text.split('');\n    const mostFrequentChar = key; // Use the most frequent character as the key\n    const encryptedText = textArray.map(char => {\n      if (char.toLowerCase() === mostFrequentChar) {\n        return 'e'; // Replace the most frequent character with 'e'\n      } else if (char.match(/[a-zA-Z]/)) {\n        return 't'; // Replace all other letters with 't'\n      }\n      return char; // Keep non-alphabetic characters unchanged\n    }).join('');\n\n    setEncrypted(encryptedText);\n  };\n\n  const handleDecrypt = () => {\n    // Decryption logic can be implemented if needed\n    // For now, we will just set decrypted text to an empty string\n    setDecrypted('Decryption not implemented');\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 pt-6 mt-10\">\n      <h1 className=\"text-3xl font-bold mb-4\">Double Transposition Cipher</h1>\n      <div className=\"flex flex-col mb-4\">\n        <label className=\"text-lg font-bold mb-2\">Text:</label>\n        <textarea\n          className=\"p-2 border border-gray-400 rounded\"\n          value={text}\n          onChange={handleTextChange}\n          rows={10}\n          cols={50}\n        />\n      </div>\n      <div className=\"flex flex-row mb-4\">\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-4\"\n          onClick={handleAnalyze}\n        >\n          Analyze\n        </button>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-4\"\n          onClick={handleEncrypt}\n        >\n          Encrypt\n        </button>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          onClick={handleDecrypt}\n        >\n          Decrypt\n        </button>\n      </div>\n      <div className=\"flex flex-col mb-4\">\n        <label className=\"text-lg font-bold mb-2\">Encrypted Text:</label>\n        <textarea\n          className=\"p-2 border border-gray-400 rounded\"\n          value={encrypted}\n          rows={10}\n          cols={50}\n          readOnly\n        />\n      </div>\n      <div className=\"flex flex-col mb-4\">\n        <label className=\"text-lg font-bold mb-2\">Decrypted Text:</label>\n        <textarea\n          className=\"p-2 border border-gray-400 rounded\"\n          value={decrypted}\n          rows={10}\n          cols={50}\n          readOnly\n        />\n      </div>\n      <div className=\"flex flex-col mb-4\">\n        <label className=\"text-lg font-bold mb-2\">Key:</label>\n        <input\n          className=\"p-2 border border-gray-400 rounded\"\n          type=\"text\"\n          value={key}\n          readOnly\n        />\n      </div>\n      <div className=\"flex flex-col mb-4\">\n        <label className=\"text-lg font-bold mb-2\">Letter Frequencies:</label>\n        <ul>\n          {Object.keys(letterFrequencies).map((letter, index) => (\n            <li key={index}>\n              {letter}: {letterFrequencies[letter]}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Cipher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}